import requests
import json
from datetime import datetime

# Get today's date in YYYY-MM-DD format
target_date = datetime.now().strftime("%Y-%m-%d")

# Base URL for AJAX data (JSON endpoint)
url = "https://www.exploit-db.com/"
headers = {
    "Accept": "application/json, text/javascript, */*; q=0.01",
    "X-Requested-With": "XMLHttpRequest",
    "User-Agent": "Mozilla/5.0"
}

start = 0
batch_size = 1000
params = {
    "start": start,
    "length": batch_size
}

collected = []

print(f"Fetching exploits {start} to {start+batch_size-1}...")
response = requests.get(url, headers=headers, params=params)
data = response.json()
total_exploits = data.get("recordsTotal", 0)

def extract_info(entry):
    return {
        "id": entry.get("id"),
        "title": entry.get("description", ["", ""])[1],
        "date": entry.get("date_published"),
        "cve": entry.get("code", [{}])[0].get("code", "N/A") if entry.get("code") else "N/A",
        "platform": entry.get("platform", {}).get("platform", "N/A"),
        "type": entry.get("type", {}).get("display", "N/A"),
        "author": entry.get("author", {}).get("name", "N/A")
    }

# First batch
for entry in data.get("data", []):
    if entry.get("date_published") == target_date:
        collected.append(extract_info(entry))

# Remaining batches
for start in range(batch_size, total_exploits, batch_size):
    params["start"] = start
    print(f"Fetching exploits {start} to {start+batch_size-1}...")
    response = requests.get(url, headers=headers, params=params)
    data = response.json()
    for entry in data.get("data", []):
        if entry.get("date_published") == target_date:
            collected.append(extract_info(entry))

# Output collected info
print(f"\n✅ Collected {len(collected)} exploits from {target_date}.\n")

# Build JSON structure
formatted = []
for e in collected:
    cve = e["cve"]
    cve_list = [cve] if cve != "N/A" else []
    cve_counts = {cve: 1} if cve != "N/A" else {}

    formatted.append({
        "cves": cve_list,
        "cve_counts": cve_counts,
        "title": e["title"],
        "permalink": f"https://www.exploit-db.com/exploits/{e['id']}",
        "text": e["title"],
        "comments": []
    })

# Write to JSON file
with open("exploitdb_cve.json", "w") as f:
    json.dump(formatted, f, indent=2)

print("✅ JSON file saved as exploitdb_cve.json.")